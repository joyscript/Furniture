// Constants =================================
$color-light: #ffffff;
$color-dark: #000000;
$color-title: #3a3a3a;
$color-text: #898989;
$color-gray: #616161;
$color-gray-md: #b0b0b0;
$color-gray-lt: #d8d8d8;
$color-bg-light: #fcf8f3;
$color-bg-prim: #f9f1e7;
$color-prim: #e89f71;
$color-prim-md: rgb(237, 184, 148);
$color-prim-lt: #f7decd;
$color-accent-red: #e97171;
$color-accent-green: #2ec1ac;
$color-icons: #262f56;

$wrapper-width: 1300px;
$content-width: 1240px;

// Placeholders ==============================

%trans {
  transition: all 0.25s ease-in-out;
}

// Mixins ===================================

@mixin addFont($font, $file, $weight, $style: normal) {
  @font-face {
    font-family: $font;
    src: url('../fonts/#{$file}.woff2') format('woff2'), url('../fonts/#{$file}.woff') format('woff');
    font-weight: $weight;
    font-style: $style;
    font-display: swap;
  }
}

@mixin font($size, $height: 1.5, $weight: inherit, $color: inherit, $style: normal) {
  font-size: $size;
  line-height: $height;
  font-weight: $weight;
  font-style: $style;
  color: $color;
}

@mixin hov() {
  &:hover,
  &:focus,
  &:focus-visible,
  &:active {
    @content;
  }
}

@mixin hide() {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}

@mixin show() {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}

@mixin img($pos: center) {
  position: relative;
  > img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: $pos;
  }
}

@function perc($width, $container-width: $content-width) {
  $result: calc($width / $container-width * 100%);
  @return $result;
}

// Равномерное распределение колонок на основе ширины в процентах, gap также рассчитывается в %
@mixin flex($width) {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  > * {
    flex-basis: calc($width / $content-width * 100%);
  }
}

// Если нужно точное количество колонок и точный gap
@mixin cols($cols, $gap) {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: $gap;

  > * {
    flex-basis: calc((100% - ($cols - 1) * $gap) / $cols);
  }
}

@mixin fbasis($width, $container-width: $content-width) {
  flex-basis: calc(($width / $container-width) * 100%);
}

@mixin flex-col($pos: flex-start) {
  display: flex;
  flex-direction: column;
  align-items: $pos;
}

// media -------------------------------------------------

@mixin media-l {
  @media (max-width: ($wrapper-width - 0.02px)) {
    @content;
  }
}

@mixin media-t {
  @media (max-width: 1023.98px) {
    @content;
  }
}

@mixin media-m {
  @media (max-width: 767.98px) {
    @content;
  }
}

@mixin media-sm {
  @media (max-width: 599.98px) {
    @content;
  }
}

@mixin media-s {
  @media (max-width: 479.98px) {
    @content;
  }
}

@mixin media($width) {
  @media (max-width: $width) {
    @content;
  }
}
